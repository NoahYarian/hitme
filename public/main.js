"use strict";

var API = "http://deckofcardsapi.com/api/",
    $dealer1 = $(".dealer1"),
    $dealer2 = $(".dealer2"),
    $player1 = $(".player1"),
    $player2 = $(".player2"),
    deckId,
    $getDeck = $(".getDeck"),
    $dealCards = $(".dealCards"),
    $hit = $(".hit"),
    $stay = $(".stay"),
    dealerHand = [],
    playerHand = [];

$getDeck.click(sixDecks);
$dealCards.click(dealFour);

function sixDecks() {
  var shuffleURL = API + "shuffle/?deck_count=6";
  console.log("shuffleURL = " + shuffleURL);
  getJSON(shuffleURL, function (data) {
    deckId = data.deck_id;
    console.log(deckId);
  });
};

function dealFour() {
  var drawURL = API + "/draw/" + deckId + "/?count=4";
  console.log("drawURL = " + drawURL);
  getJSON(drawURL, function (data) {
    $dealer1.attr("src", data.cards[0].image);
    $player1.attr("src", data.cards[1].image);
    $dealer2.attr("src", data.cards[2].image);
    $player2.attr("src", data.cards[3].image);
    dealerHand.push(data.cards[0].value + " " + data.cards[0].suit);
    playerHand.push(data.cards[1].value + " " + data.cards[1].suit);
    dealerHand.push(data.cards[2].value + " " + data.cards[2].suit);
    playerHand.push(data.cards[3].value + " " + data.cards[3].suit);
  });
}

// Scott's cross-origin fix
function getJSON(url, cb) {
  var JSONP_PROXY = "https://jsonp.afeld.me/?url=";
  // THIS WILL ADD THE CROSS ORIGIN HEADERS
  var request = new XMLHttpRequest();
  request.open("GET", JSONP_PROXY + url);
  request.onload = function () {
    if (request.status >= 200 && request.status < 400) {
      cb(JSON.parse(request.responseText));
    }
  };
  request.send();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxHQUFHLEdBQUcsZ0NBQWdDO0lBQ3hDLFFBQVEsR0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDO0lBQ3hCLFFBQVEsR0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDO0lBQ3hCLFFBQVEsR0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDO0lBQ3hCLFFBQVEsR0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDO0lBQ3hCLE1BQU07SUFDTixRQUFRLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQztJQUN4QixVQUFVLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztJQUM1QixJQUFJLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUNoQixLQUFLLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQztJQUNsQixVQUFVLEdBQUcsRUFBRTtJQUNmLFVBQVUsR0FBRyxFQUFFLENBQUM7O0FBRWxCLFFBQVEsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDekIsVUFBVSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQzs7QUFHM0IsU0FBUyxRQUFRLEdBQUc7QUFDbEIsTUFBSSxVQUFVLEdBQUcsR0FBRyxHQUFHLHVCQUF1QixDQUFDO0FBQy9DLFNBQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxHQUFHLFVBQVUsQ0FBQyxDQUFDO0FBQzFDLFNBQU8sQ0FBQyxVQUFVLEVBQUUsVUFBUyxJQUFJLEVBQUU7QUFDakMsVUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7QUFDdEIsV0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztHQUNyQixDQUFDLENBQUM7Q0FDSixDQUFDOztBQUVGLFNBQVMsUUFBUSxHQUFHO0FBQ2xCLE1BQUksT0FBTyxHQUFHLEdBQUcsR0FBRyxRQUFRLEdBQUcsTUFBTSxHQUFHLFdBQVcsQ0FBQztBQUNwRCxTQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksR0FBRyxPQUFPLENBQUMsQ0FBQztBQUNwQyxTQUFPLENBQUMsT0FBTyxFQUFFLFVBQVMsSUFBSSxFQUFFO0FBQzlCLFlBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDMUMsWUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUMxQyxZQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzFDLFlBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDMUMsY0FBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoRSxjQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2hFLGNBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDaEUsY0FBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUNqRSxDQUFDLENBQUM7Q0FDSjs7O0FBR0QsU0FBUyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRTtBQUN4QixNQUFJLFdBQVcsR0FBRyw4QkFBOEIsQ0FBQTs7QUFFaEQsTUFBSSxPQUFPLEdBQUcsSUFBSSxjQUFjLEVBQUUsQ0FBQztBQUNuQyxTQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxXQUFXLEdBQUcsR0FBRyxDQUFDLENBQUM7QUFDdkMsU0FBTyxDQUFDLE1BQU0sR0FBRyxZQUFXO0FBQzFCLFFBQUksT0FBTyxDQUFDLE1BQU0sSUFBSSxHQUFHLElBQUksT0FBTyxDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUU7QUFDakQsUUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7S0FDdEM7R0FDRixDQUFDO0FBQ0YsU0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO0NBQ2hCIiwiZmlsZSI6InNyYy9tYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIEFQSSA9IFwiaHR0cDovL2RlY2tvZmNhcmRzYXBpLmNvbS9hcGkvXCIsXG4gICRkZWFsZXIxID0gJChcIi5kZWFsZXIxXCIpLFxuICAkZGVhbGVyMiA9ICQoXCIuZGVhbGVyMlwiKSxcbiAgJHBsYXllcjEgPSAkKFwiLnBsYXllcjFcIiksXG4gICRwbGF5ZXIyID0gJChcIi5wbGF5ZXIyXCIpLFxuICBkZWNrSWQsXG4gICRnZXREZWNrID0gJChcIi5nZXREZWNrXCIpLFxuICAkZGVhbENhcmRzID0gJChcIi5kZWFsQ2FyZHNcIiksXG4gICRoaXQgPSAkKFwiLmhpdFwiKSxcbiAgJHN0YXkgPSAkKFwiLnN0YXlcIiksXG4gIGRlYWxlckhhbmQgPSBbXSxcbiAgcGxheWVySGFuZCA9IFtdO1xuXG4kZ2V0RGVjay5jbGljayhzaXhEZWNrcyk7XG4kZGVhbENhcmRzLmNsaWNrKGRlYWxGb3VyKTtcblxuXG5mdW5jdGlvbiBzaXhEZWNrcygpIHtcbiAgdmFyIHNodWZmbGVVUkwgPSBBUEkgKyBcInNodWZmbGUvP2RlY2tfY291bnQ9NlwiO1xuICBjb25zb2xlLmxvZyhcInNodWZmbGVVUkwgPSBcIiArIHNodWZmbGVVUkwpO1xuICBnZXRKU09OKHNodWZmbGVVUkwsIGZ1bmN0aW9uKGRhdGEpIHtcbiAgICBkZWNrSWQgPSBkYXRhLmRlY2tfaWQ7XG4gICAgY29uc29sZS5sb2coZGVja0lkKTtcbiAgfSk7XG59O1xuXG5mdW5jdGlvbiBkZWFsRm91cigpIHtcbiAgdmFyIGRyYXdVUkwgPSBBUEkgKyBcIi9kcmF3L1wiICsgZGVja0lkICsgXCIvP2NvdW50PTRcIjtcbiAgY29uc29sZS5sb2coXCJkcmF3VVJMID0gXCIgKyBkcmF3VVJMKTtcbiAgZ2V0SlNPTihkcmF3VVJMLCBmdW5jdGlvbihkYXRhKSB7XG4gICAgJGRlYWxlcjEuYXR0cihcInNyY1wiLCBkYXRhLmNhcmRzWzBdLmltYWdlKTtcbiAgICAkcGxheWVyMS5hdHRyKFwic3JjXCIsIGRhdGEuY2FyZHNbMV0uaW1hZ2UpO1xuICAgICRkZWFsZXIyLmF0dHIoXCJzcmNcIiwgZGF0YS5jYXJkc1syXS5pbWFnZSk7XG4gICAgJHBsYXllcjIuYXR0cihcInNyY1wiLCBkYXRhLmNhcmRzWzNdLmltYWdlKTtcbiAgICBkZWFsZXJIYW5kLnB1c2goZGF0YS5jYXJkc1swXS52YWx1ZSArIFwiIFwiICsgZGF0YS5jYXJkc1swXS5zdWl0KTtcbiAgICBwbGF5ZXJIYW5kLnB1c2goZGF0YS5jYXJkc1sxXS52YWx1ZSArIFwiIFwiICsgZGF0YS5jYXJkc1sxXS5zdWl0KTtcbiAgICBkZWFsZXJIYW5kLnB1c2goZGF0YS5jYXJkc1syXS52YWx1ZSArIFwiIFwiICsgZGF0YS5jYXJkc1syXS5zdWl0KTtcbiAgICBwbGF5ZXJIYW5kLnB1c2goZGF0YS5jYXJkc1szXS52YWx1ZSArIFwiIFwiICsgZGF0YS5jYXJkc1szXS5zdWl0KTtcbiAgfSk7XG59XG5cbi8vIFNjb3R0J3MgY3Jvc3Mtb3JpZ2luIGZpeFxuZnVuY3Rpb24gZ2V0SlNPTih1cmwsIGNiKSB7XG4gIHZhciBKU09OUF9QUk9YWSA9ICdodHRwczovL2pzb25wLmFmZWxkLm1lLz91cmw9J1xuICAvLyBUSElTIFdJTEwgQUREIFRIRSBDUk9TUyBPUklHSU4gSEVBREVSU1xuICB2YXIgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICByZXF1ZXN0Lm9wZW4oJ0dFVCcsIEpTT05QX1BST1hZICsgdXJsKTtcbiAgcmVxdWVzdC5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAocmVxdWVzdC5zdGF0dXMgPj0gMjAwICYmIHJlcXVlc3Quc3RhdHVzIDwgNDAwKSB7XG4gICAgICBjYihKU09OLnBhcnNlKHJlcXVlc3QucmVzcG9uc2VUZXh0KSk7XG4gICAgfVxuICB9O1xuICByZXF1ZXN0LnNlbmQoKTtcbn1cbiJdfQ==